(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const ko = require('knockout');
const octicons = require('octicons');
const components = require('ungit-components');

components.register('gitErrors', args => new GitErrorsViewModel(args.server, args.repoPath));

class GitErrorsViewModel {
  constructor(server, repoPath) {
    this.server = server;
    this.repoPath = repoPath;
    this.gitErrors = ko.observableArray();
    this.closeIcon = octicons.x.toSVG({ 'height': 18 });
    this.alertIcon = octicons.alert.toSVG({ 'height': 24 });
  }

  updateNode(parentElement) {
    ko.renderTemplate('gitErrors', this, {}, parentElement);
  }

  onProgramEvent(event) {
    if (event.event == 'git-error') this._handleGitError(event);
  }

  _handleGitError(event) {
    if (event.data.repoPath != this.repoPath()) return;
    this.gitErrors.push(new GitErrorViewModel(this, this.server, event.data));
  }
}

class GitErrorViewModel {
  constructor(gitErrors, server, data) {
    const self = this;
    this.gitErrors = gitErrors;
    this.server = server;
    this.tip = data.tip;
    this.isWarning = data.isWarning || false;
    this.command = data.command;
    this.error = data.error;
    this.stdout = data.stdout;
    this.stderr = data.stderr;
    this.showEnableBugtracking = ko.observable(false);
    this.bugReportWasSent = ungit.config.bugtracking;

    if (!data.shouldSkipReport && !ungit.config.bugtracking) {
      this.server.getPromise('/userconfig')
        .then(userConfig => { self.showEnableBugtracking(!userConfig.bugtracking); });
    }
  }

  dismiss() {
    this.gitErrors.gitErrors.remove(this);
  }
}

},{"knockout":"knockout","octicons":undefined,"ungit-components":"ungit-components"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjb21wb25lbnRzL2dpdEVycm9ycy9naXRFcnJvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBrbyA9IHJlcXVpcmUoJ2tub2Nrb3V0Jyk7XG5jb25zdCBvY3RpY29ucyA9IHJlcXVpcmUoJ29jdGljb25zJyk7XG5jb25zdCBjb21wb25lbnRzID0gcmVxdWlyZSgndW5naXQtY29tcG9uZW50cycpO1xuXG5jb21wb25lbnRzLnJlZ2lzdGVyKCdnaXRFcnJvcnMnLCBhcmdzID0+IG5ldyBHaXRFcnJvcnNWaWV3TW9kZWwoYXJncy5zZXJ2ZXIsIGFyZ3MucmVwb1BhdGgpKTtcblxuY2xhc3MgR2l0RXJyb3JzVmlld01vZGVsIHtcbiAgY29uc3RydWN0b3Ioc2VydmVyLCByZXBvUGF0aCkge1xuICAgIHRoaXMuc2VydmVyID0gc2VydmVyO1xuICAgIHRoaXMucmVwb1BhdGggPSByZXBvUGF0aDtcbiAgICB0aGlzLmdpdEVycm9ycyA9IGtvLm9ic2VydmFibGVBcnJheSgpO1xuICAgIHRoaXMuY2xvc2VJY29uID0gb2N0aWNvbnMueC50b1NWRyh7ICdoZWlnaHQnOiAxOCB9KTtcbiAgICB0aGlzLmFsZXJ0SWNvbiA9IG9jdGljb25zLmFsZXJ0LnRvU1ZHKHsgJ2hlaWdodCc6IDI0IH0pO1xuICB9XG5cbiAgdXBkYXRlTm9kZShwYXJlbnRFbGVtZW50KSB7XG4gICAga28ucmVuZGVyVGVtcGxhdGUoJ2dpdEVycm9ycycsIHRoaXMsIHt9LCBwYXJlbnRFbGVtZW50KTtcbiAgfVxuXG4gIG9uUHJvZ3JhbUV2ZW50KGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmV2ZW50ID09ICdnaXQtZXJyb3InKSB0aGlzLl9oYW5kbGVHaXRFcnJvcihldmVudCk7XG4gIH1cblxuICBfaGFuZGxlR2l0RXJyb3IoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQuZGF0YS5yZXBvUGF0aCAhPSB0aGlzLnJlcG9QYXRoKCkpIHJldHVybjtcbiAgICB0aGlzLmdpdEVycm9ycy5wdXNoKG5ldyBHaXRFcnJvclZpZXdNb2RlbCh0aGlzLCB0aGlzLnNlcnZlciwgZXZlbnQuZGF0YSkpO1xuICB9XG59XG5cbmNsYXNzIEdpdEVycm9yVmlld01vZGVsIHtcbiAgY29uc3RydWN0b3IoZ2l0RXJyb3JzLCBzZXJ2ZXIsIGRhdGEpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICB0aGlzLmdpdEVycm9ycyA9IGdpdEVycm9ycztcbiAgICB0aGlzLnNlcnZlciA9IHNlcnZlcjtcbiAgICB0aGlzLnRpcCA9IGRhdGEudGlwO1xuICAgIHRoaXMuaXNXYXJuaW5nID0gZGF0YS5pc1dhcm5pbmcgfHwgZmFsc2U7XG4gICAgdGhpcy5jb21tYW5kID0gZGF0YS5jb21tYW5kO1xuICAgIHRoaXMuZXJyb3IgPSBkYXRhLmVycm9yO1xuICAgIHRoaXMuc3Rkb3V0ID0gZGF0YS5zdGRvdXQ7XG4gICAgdGhpcy5zdGRlcnIgPSBkYXRhLnN0ZGVycjtcbiAgICB0aGlzLnNob3dFbmFibGVCdWd0cmFja2luZyA9IGtvLm9ic2VydmFibGUoZmFsc2UpO1xuICAgIHRoaXMuYnVnUmVwb3J0V2FzU2VudCA9IHVuZ2l0LmNvbmZpZy5idWd0cmFja2luZztcblxuICAgIGlmICghZGF0YS5zaG91bGRTa2lwUmVwb3J0ICYmICF1bmdpdC5jb25maWcuYnVndHJhY2tpbmcpIHtcbiAgICAgIHRoaXMuc2VydmVyLmdldFByb21pc2UoJy91c2VyY29uZmlnJylcbiAgICAgICAgLnRoZW4odXNlckNvbmZpZyA9PiB7IHNlbGYuc2hvd0VuYWJsZUJ1Z3RyYWNraW5nKCF1c2VyQ29uZmlnLmJ1Z3RyYWNraW5nKTsgfSk7XG4gICAgfVxuICB9XG5cbiAgZGlzbWlzcygpIHtcbiAgICB0aGlzLmdpdEVycm9ycy5naXRFcnJvcnMucmVtb3ZlKHRoaXMpO1xuICB9XG59XG4iXX0=
